1. Create a database called 'my_first_db'.
---------- use my_first_db

2. Create students collection.
---------- db.createCollection('students')

3. Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4. Create 5 students with the appropriate info.
---------- 
	db.students.insert({name: "Jason", home_state:"California", lucky_number:7, birthday: {month:9, day:23, year:1970}})
	db.students.insert({name: "Eugene", home_state:"Virginia", lucky_number:9, birthday: {month:12, day:27, year:1973}})
	db.students.insert({name: "Claudia", home_state:"District of Columbia", lucky_number:25, birthday: {month:6, day:15, year:1973}})
	db.students.insert({name: "Raf", home_state:"District of Columbia", lucky_number:77, birthday: {month:2, day:30, year:1977}})
	db.students.insert({name: "Aushar", home_state:"Maryland", lucky_number:99, birthday: {month:1, day:12, year:1987}})

5 Get all students.
---------- db.students.find().pretty()

6. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
---------- db.students.find ( { home_state: { $in: ['California', 'Washington'] } } )

7. Get all students whose lucky number is: 
	1. greater than 3 
----------- db.students.find({lucky_number: {$gt:3}})
	2. less than or equal to 10 
----------- db.students.find({lucky_number: {$lte:10}})
	3. between 1 and 9 (inclusive)
----------- db.students.find({$and: [{lucky_number: {$gt:1}}, {lucky_number: {$lt:9}}]})

8. Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
----------- db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})

9. Add some unique interests for each particular students into each of their interest arrays.
----------- db.students.update({_id: ObjectId("593afd42e3919fc544c87ced")}, {$push: {interests: "coding"}})
----------- db.students.update({_id: ObjectId("593afd5de3919fc544c87cee")}, {$push: {interests: "brunch"}})
----------- db.students.update({_id: ObjectId("593afd71e3919fc544c87cef")}, {$push: {interests: "coding"}})
----------- db.students.update({_id: ObjectId("593afd80e3919fc544c87cf0")}, {$push: {interests: "MongoDB"}})
----------- db.students.update({_id: ObjectId("593afd91e3919fc544c87cf1")}, {$push: {interests: "MongoDB"}})

10. Add the interest 'taxes' into someone's interest array.
----------- db.students.update({_id: ObjectId("593afd71e3919fc544c87cef")}, {$push: {interests: "taxes"}})

11. Remove the 'taxes' interest you just added.
----------- db.students.update({_id: ObjectId("593afd71e3919fc544c87cef")}, {$pull: {interests: "taxes"}})

12. Remove all students who are from California (or Washington).
----------- db.students.remove({$or:[{home_state: 'California'}, {home_state: 'Washington'}]})

13. Remove a user by name. 
----------- db.students.remove({user:'Jason'})
14. Remove a student whose lucky number is greater than 5 (JUST ONE)
----------- db.students.remove({lucky_number:{$gt:5}, {justOne:true})

15. Add a field to each student collection called 'number_of_belts' and set it to 0.
----------- db.students.update({},{$set: {"number_of_belts":0}},{multi:true})

16. Increment this field by 1 for all students in Distric of Columbia(Seattle Dojo).
----------- db.students.update({home_state: "District of Columbia"},{$inc: {number_of_belts: 1}},{multi:true})

17. Rename the 'number_of_belts' field to 'belts_earned'
----------- db.students.updateMany( {}, { $rename: { "number_of_belts": "belts_earned" } } )

18. Remove the 'lucky_number' field.
----------- db.students.update({}, {$unset:{lucky_number:""}},{multi:true})

19. Add a 'updated_on' field, and set the value as the current date.
----------- db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})
